version: 0.2
env:
  variables:
    AWS_REGION: "us-east-2"
    LBC_VERSION: "v2.3.0"
phases:
  pre_build:
    commands:
      - cd terraform/liberty/infra
      - export ACCOUNT=$(aws sts get-caller-identity | grep Account | tr -d '":,' | awk '{print $2}')
      - export CLUSTER=$(aws eks list-clusters | grep liberty | tr -d ' "')
      - export VPC_ID=$(aws eks describe-cluster --name eksworkshop-eksctl --query "cluster.resourcesVpcConfig.vpcId"  --output text)
      - helm repo add eks https://aws.github.io/eks-charts
  build:
    commands:
      - aws eks --region ${AWS_REGION} update-kubeconfig --name ${CLUSTER} --role-arn arn:aws:iam::${ACCOUNT}:role/tf-codebuild-role
      - kubectl delete deploy aws-load-balancer-controller -n kube-system || true
      - helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=eksworkshop-eksctl --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller --set image.tag="${LBC_VERSION}" --set region=${AWS_REGION} --set vpcId=${VPC_ID}
      - kubectl -n kube-system rollout status deployment aws-load-balancer-controller
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/examples/2048/2048_full.yaml || true
      - export FARGATE_GAME_2048=$(kubectl get ingress/ingress-2048 -n game-2048 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
      - echo "http://${FARGATE_GAME_2048}"
      - sleep 300
      - kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/examples/2048/2048_full.yaml
      - kubectl -n game-2048 rollout status deployment deployment-2048
      - kubectl get nodes
      - kubectl get ingress/ingress-2048 -n game-2048
      - export FARGATE_GAME_2048=$(kubectl get ingress/ingress-2048 -n game-2048 -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
      - echo "http://${FARGATE_GAME_2048}"


