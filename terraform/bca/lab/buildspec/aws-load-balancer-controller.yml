version: 0.2
env:
  variables:
    AWS_REGION: "us-east-2"
phases:
  pre_build:
    commands:
      - export ACCOUNT_ID=$(aws sts get-caller-identity | grep Account | tr -d '":,' | awk '{print $2}')
      - export CLUSTER="$(eksctl get cluster | grep bca | awk '{print $1}')"
      - aws sts get-caller-identity
      - #OUT=$(aws sts assume-role --role-arn arn:aws:iam::${ACCOUNT_ID}:role/tf-codebuild-role --role-session-name aaa);\
      - #export AWS_ACCESS_KEY_ID=$(echo $OUT | jq -r '.Credentials''.AccessKeyId');\
      - #export AWS_SECRET_ACCESS_KEY=$(echo $OUT | jq -r '.Credentials''.SecretAccessKey');\
      - #export AWS_SESSION_TOKEN=$(echo $OUT | jq -r '.Credentials''.SessionToken');
      - #aws sts get-caller-identity
  
  build:
    commands: |
      echo "CLUSTER: $CLUSTER"
      kubectl create sa aws-load-balancer-controller -n kube-system || true 
      aws cloudformation delete-stack --stack-name eksctl-${CLUSTER}-addon-iamserviceaccount-kube-system-aws-load-balancer-controller      
      eksctl create iamserviceaccount  --cluster "$CLUSTER"  --namespace kube-system  --name aws-load-balancer-controller  --attach-policy-arn arn:aws:iam::${ACCOUNT_ID}:policy/AWSLoadBalancerControllerIAMPolicy  --override-existing-serviceaccounts  --approve 
      #until aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE | grep iamserviceaccount-kube-system-aws-load-balancer-controller
      #do
      #  sleep 60 
      #done

